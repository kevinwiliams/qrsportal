@model IEnumerable<QRSPortal2.Models.Retailer>

@{
    ViewBag.Title = "All Agents";
}
<style>
    .dataTables_filter label{ display: block; }
</style>
<div id="loadingScreen">
    <!-- Loading screen content goes here -->
    <div class="loader"></div>
    <p>Loading...</p>
</div>
<section class="section dashboard">
    <div class="row">
        <div class="col-xxl-12 col-xl-12">

            <div class="card info-card customers-card">
                <div class="card-body">
                    <h5 class="card-title">Retailers <span>| This Year</span></h5>

                    <div class="d-flex align-items-center">
                        <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                            <i class="bi bi-people"></i>
                        </div>
                        <div class="ps-3">
                            <h6>@ViewData["CircproUsers"]</h6>
                            <span class="text-danger small pt-1 fw-bold d-none">12%</span> <span class="text-muted small pt-2 ps-1 d-none">decrease</span>
                            <button class="btn btn-success btn-sm" id="getNewUser" name="getNewUser"><i class="bi bi-box-arrow-in-down"></i> Pull new users</button>
                        </div>
                    </div>

                </div>
            </div>

        </div>

        <div class="col-lg-12">

            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Agent List</h5>

                    <table class="table table-hover table-striped small dtRetailers">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.AccountID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.DistributionID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.RetailerName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.EmailAddress)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Company)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.RetailerAddress)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PhoneNumber)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CellNumber)
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <a href="@Url.Action("account", "distribution", new { id = item.AccountID })" id="loadAccount" name="loadAccount"> @Html.DisplayFor(modelItem => item.AccountID)</a>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DistributionID)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RetailerName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EmailAddress)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Company)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RetailerAddress)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CellNumber)
                                    </td>
                                    <td>
                                        <a href="@Url.Action("account", "distribution", new { id = item.AccountID })" id="loadAccount" name="loadAccount"><i class="bi bi-box-arrow-up-right"></i></a>

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <input type="hidden" name="maxDistId" id="maxDistId" value="@ViewData["MaxDistId"]" />

                    <!-- End Default Table Example -->
                </div>
            </div>
        </div>
    </div>
</section>
<input type="hidden" name="error" id="error" value="@TempData["Error"]" />
@Scripts.Render("~/bundles/jquery")
<script src="~/Scripts/addons.js"></script>

<script>
    function ReloadPage() {
        location.reload();
    }

    showLoadingScreen();

    $('[name=loadAccount]').on('click', function (e) { showLoadingScreen(); });

    $(document).ready(function () {
        hideLoadingScreen();

       $(window).on('pageshow', function (event) {
            // Check if the event's persisted property is false
            if (event.originalEvent.persisted) {
                // This means the page is loaded from the cache
                hideLoadingScreen();
            }
        });

        var showError = $('#error').val();
        if (showError) {
            swal({
                title: "Error!",
                text: "No records found for the account",
                type: "warning",
                dangerMode: true
            });

            hideLoadingScreen();
        }

        console.log($('[name=error]').val())
        $('.dtRetailers').DataTable({
            fixedHeader: true,
            order: [[0, 'desc']],
            pageLength: 15,
            lengthChange: false,
            responsive: true,
            dom: "<'row'<'col-sm-6'f>>" + // Place the search box in its own row and make it wider
                 "<'row'<'col-sm-12'tr>>" + // Display the table in its own row
                 "<'row'<'col-sm-5'i><'col-sm-7'p>>",
            columnDefs: [
                { responsivePriority: 1, targets: 0 }, // Account
                { responsivePriority: 2, targets: 2 }, // Name
                { responsivePriority: 3, targets: 3 }, // Company
                //{ responsivePriority: 3, targets: 8 }  // Action
            ],
            initComplete: function () {
                // Add a class to the search label
                $('.dataTables_filter label').addClass('form-label');                                                                                                                                                                                                                                                                                                       
            }

        });

         $('[name=getNewUser]').click(function () {
            var spinner = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Loading...';
            $('[name=getNewUser]').html(spinner);
            $('[name=getNewUser]').attr('disabled', true);

            $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetNewUsers", "retailer")',
                    dataType: 'json',
                data: {
                    id: $('#maxDistId').val()
                },
                success: function (response) {
                    console.log(response);
                     if (response.success) {
                       console.log(response.success);

                        swal({
                            title: "Success!",
                            text: "Retailer list updated!",
                            type: "success",
                            dangerMode: false
                        });

                        setTimeout(
                            ReloadPage
                            , 2500);
                    } else {
                       swal({
                            title: "Error!",
                            text: "No new users found!",
                            type: "warning",
                            dangerMode: true
                        });
                    }


                    }
                });

        });

    });
</script>
